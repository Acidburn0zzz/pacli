#!/bin/bash

#  updated on 17.05.2015 16:11:02

#  This program is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation; either version 2 of the License, or
#  (at your option) any later version.
#  
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#  
#  You should have received a copy of the GNU General Public License
#  along with this program; if not, write to the Free Software
#  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
#  MA 02110-1301, USA.
#  

#################################################################
# Design based on IceFox script                                 #
# Modified, adapted and improved by pekman and excalibur1234    #
# translation by spylinux					#
# Pmenu and Downgrade support added by Chrysostomus		#
# Contact and suggestions: pekman@openmailbox.org               #
# Freenode: #manjaropek #manjaro-geek #manjaro			#
# Topic discussion 						#
#			http://polr.me/pacli1			#
#			http://polr.me/pacli2			#
#################################################################

function help_text() {
	less 	<<-EOF
Welcome to Pacli's Help Page.


Pacli is an interactive package manager for your command line terminal. It provides an easy user interface and uses Pacman and Yaourt as back ends. Additionally, it uses some Manjaro exclusive commands. Pacli offers to you the most common and useful features for managing your Packages.
On the following Help Page all options Pacli offers are described in detail.


HOME SCREEN

Pacli's home screen is split into two parts: 
The upper part focuses on gerneral options and options exclusive to packages from Manjaro's repositories.
The lower part offers Arch User Repository (AUR) management options.


0 - EXIT PACLI

"clear && exit"
This will exit Pacli and clear your terminal.


1 - UPDATE SYSTEM

"sudo pacman -Syyuu"
This option forces a redownload of the latest package database from the Manjaro repositories. Then, all your installed packages are checked against this latest package database. If an updated package is available from the Manjaro repositories, it will get downloaded and installed on your system. If an installed package is newer than the same package in the Manjaro repositories, the installed package will get downgraded. This behavior ensures your packages are always in sync with the Manajro repositories, even if you have just switched from unstable to stable branch.
If you want a faster way to update your system, use "sudo pacman -Syu".


2 - OPTIMIZE MIRRORS

"sudo pacman-mirrors -g && sudo pacman -Syy"
This command tests your connection to all available Manjaro repository mirrors/servers. The mirror with the best connection is automatically chosen for you. Additionally, the latest package database is downloaded from the chosen mirror.
If you want to speed up this command test only your connection to Manjaro mirrors/servers near you. Example: You have noticed the pings to German and French mirrors are always best for you. Then, you can run: "sudo pacman-mirrors -g -c Germany,France"


3 - OPTIMIZE DATABASE

"sudo pacman-optimize"
This command effectively defragments your Pacman database. It is recommended to CLEAN your PACKAGE CACHE before using this option.
On traditional hard drives (HDD) this command can speed up all actions related to Pacman. But it is NOT recommended to use this command on modern solid state hard drives (SSD)!


4 - CLEAN PACKAGE CACHE

"paccache -ruk0
 paccache -rk2"
By default Manjaro uses a cache for downloading all packages. These cached packages are not deleted automatically. This enables you to DOWNGRADE broken PACKAGES without a working internet connection. The package cache of an old and actively used Manjaro installation can become quite large. Clean it to gain space on your root partition back.
The first command removes all packages from cache, which are not installed (anymore) on your system. The second command removes all old packages from your cache except the 2 latest versions: The version you have currently installed on your system and the previous version.
If you want to remove ALL cached packages run "sudo pacman -Scc". Attention: This will make it impossible to reinstall or DOWNGRADE PACKAGES without a working internet connection.


5 - SEARCH PACKAGE

"pacman -Ss <PACKAGE NAME>"
This option will search for <PACKAGE NAME> in all available packages in the Manjaro repositories. It will NOT search on the Arch User Repository (AUR).


6 - PACKAGE INFORMATION

"pacman -Si <PACKAGE NAME>"
This command displays a lot of information about <PACKAGE NAME>. <PACKAGE NAME> must be a package from the Manjaro repositories.


7 - INSTALL PACKAGE

"sudo pacman -S <PACKAGE NAME>"
This option downloads and installs <PACKAGE NAME> on your system. <PACKAGE NAME> must be a package from the Manjaro repositories.


8 - DETAIL INSTALLED PACKAGES

"pacman -Qi <PACKAGE NAME>"
This command displays a lot of information about <PACKAGE NAME>. <PACKAGE NAME> must be installed on your system.


9 - REMOVE PACKAGE

"sudo pacman -R <PACKAGE NAME>"
This command removes <PACKAGE NAME> from your system. A copy of <PACKAGE NAME> will be kept in your package cache and all dependencies will be kept on your system. Some dependencies might become orphaned packages.


10 - REMOVE PACKAGE + DEPS

"sudo pacman -Rsn <PACKAGE NAME>"
This command removes <PACKAGE NAME> including all dependencies, which are no longer needed by other packages, from your system. A copy of <PACKAGE NAME> will be kept in your package cache.


11 - LIST ORPHANED PACKAGES

"pacman -Qqdt"
This option lists all orphaned packages on your system. Orphaned packages are old dependencies ( packages not explicitly installed by you), which were never removed from your system. 


12 - REMOVE ORPHANED PACKAGES

"sudo pacman -Rns $(pacman -Qqdt)"
This command removes all orphaned packages on your system. Orphaned packages are old dependencies ( packages not explicitly installed by you), which were never removed from your system. 
Attention: It might be undesireable to remove all orphaned packages (often). It is recommended to LIST ORPHAN PACKAGES first.


13 - LOCAL LIST

"pacman -Ql <PACKAGE NAME>"
This command lists all files and their install directory contained in <PACKAGE NAME>. <PACKAGE NAME> must be installed on your system.


14 - DEPENDENCIES TREE

"pactree <PACKAGE NAME>"
This command will display a complete tree of all dependencies of <PACKAGE NAME>.
Attention: The dependency tree can be quite long an complex for higher level packages such as "firefox".


15 - INSTALLED PACKAGES

"pacman -Qet"
This option lists all packages from Manjaro's repositories installed on your system.


16 - FIX ERRORS

"sudo rm -f /var/lib/pacman/db.lck && sudo pacman-mirrors -g && sudo pacman -Syy"
This long command attempts to fix the most common issues Manjaro users have with Pacman: First, it removes Pacman's database lock. Then, it does the same as OPTIMIZE MIRRORS: It will search for working and good Manjaro repository mirrors/servers.
Attention: Only run this command when no other Pacman instance (e.g. Pacman, Yaourt, Pamac, Octopi, PacmanXG4, ...) is running.


17 - DOWNGRADE PACKAGES

"downgrade <PACKAGE NAME>"
Manjaro uses a rolling release development model. This means ALL packages on your system continuesly get updated to the latest version. If the latest version of a packages does not work on your system, you can downgrade that package to an earlier, working version.
This command downgrades <PACKAGE NAME> and offers you a list of old <PACKAGE NAME> versions to choose from. This list includes all old <PACKAGE NAME> versions from your package cache and online sources (if you have a working internet connection).


18 - HELP

Display this help page.



19 - UPDATE AUR

"yaourt -Syyuua"
This command does the same as UPDATE SYSTEM, but with one excpetion: It updates all packages from Arch User Repository (AUR), which have an updated PKGBUILD file.
Attention: When a new version of an AUR package is available, often the PKGBUILD file does not need to be updated. If you want to install the latest version of an AUR package, (re-)install it with INSTALL FROM AUR. If you want to install the latest version of all AUR packages do "yaourt -Syyuua --devel".


20 - SEARCH + INSTALL FROM AUR

"yaourt <PACKAGE NAME>"
This command does the same as SEARCH PACKAGE, but additionally it searches the Arch User Repository (AUR). Search results can be installed on your system.


21 - INSTALL FROM AUR

"yaourt -S <PACKAGE NAME>"
This command does the same as INSTALL PACKAGE, but additionally AUR packages can be installed.


22 - LIST INSTALLED FROM AUR

"pacman -Qem"
This command lists all installed packages, which are from the AUR or which were manually installed.
	EOF
}

# set colors
RED='\e[41m'
BLUE='\e[44m'
ORANGE='\e[46m'
NC='\e[0m'
    while true; do
    clear
    echo ""
    echo -e "                             $NC ::Pacli - Package manager:: $NC "
    echo ""
    echo -e ""
    echo -e " ┌────────────────────────────────────────────────────────────────────────────┐"
    echo -e " │  $NC  1 $NC  Update System                       $NC  2 $NC  Optimize Mirrors          │"
    echo -e " │  $NC  3 $NC  Optimize Database                   $NC  4 $NC  Clean Package Cache       │"
    echo -e " │  $NC  5 $NC  Search Package                      $NC  6 $NC  Package Information       │"
    echo -e " │  $NC  7 $NC  Install Package                     $NC  8 $NC  Detail Installed Packages │"
    echo -e " │  $NC  9 $NC  Remove Package                      $NC 10 $NC  Remove Package + Deps     │"
    echo -e " │  $NC 11 $NC  List Orphaned Packages              $NC 12 $NC  Remove Orphaned Packages  │"
    echo -e " │  $NC 13 $NC  Local List                          $NC 14 $NC  Dependencies Tree         │"
    echo -e " │  $NC 15 $NC  Installed Packages                  $NC 16 $NC  Fix Errors                │"
    echo -e " │  $NC 17 $NC  Downgrade Packages                  $NC 18 $NC  Help                      │"
    echo " └────────────────────────────────────────────────────────────────────────────┘"
    echo ""
    echo " ┌────────────────────────────────────────────────────────────────────────────┐"
    echo -e " │  $NC 19 $NC  Update AUR                          $NC 20 $NC  Search + Install from AUR │"
    echo -e " │  $NC 21 $NC  Install from AUR                    $NC 22 $NC  List Installed from AUR   │"
    echo " └────────────────────────────────────────────────────────────────────────────┘"
    echo ""
    echo -e "    $NC Select a number between 1 and 22 and press [Enter]$NC $NC - 0 Exit Pacli$NC"
    echo ""
    read choix
    case $choix in
        1)
            echo
            sudo pacman -Syyuu
            echo ""
            echo -e "$NC Your system is updated. To return to pacli press [Enter] $NC"
            read
            ;;
        2)
            echo
            sudo pacman-mirrors -g && sudo pacman -Syy
            echo ""
            echo -e "$NC Fastest mirror chosen. To return to pacli press [Enter] $NC"
            read
            ;;
        3)
            echo
            sudo pacman-optimize
            echo ""
            echo -e "$NC Pacman Database optimized. To return to pacli press [Enter] $NC"
            read
            ;;
        4)
            echo
            paccache -ruk0
	    paccache -rk2
            echo ""
            echo -e "$NC Unneeded and old package versions removed. To return to pacli press [Enter] $NC"
            read
            ;;
        5)
            echo ""
            echo "Do you want to search a package? Put the name below and press [Enter]"
            echo ""
            pacman -Ss $(pacman -Slq | pmenu -p 'select package to search >')
            echo ""
            echo -e "$NC The search is complete. To return to pacli press [Enter] $NC"
            read
            ;;
        6)
            echo ""
            echo "Do you want to check specific information about a package? Put the name below and press [Enter]"
            echo ""
            pacman -Si $(pacman -Slq | pmenu -p 'select package to search >')
            echo ""
            echo -e "$NC The search for information ended. To return to pacli press [Enter] $NC"
            read 
			;;
        7)
            echo ""
            echo "Do you want to install a package? Put the name below and press [Enter]"
            echo ""
            sudo pacman -S $(pacman -Slq | pmenu -p 'select package to install >')
            echo ""
            echo -e "$NC The package installation is finished. To return to pacli press [Enter] $NC"
            read
            ;;
        8)
            echo ""
            echo "Do you want to check specific information about a package?  Put the name below and press [Enter]"
            echo ""
            pacman -Qi $(pacman -Qq | pmenu -p 'select a package >')
            echo ""
            echo -e "$NC All information displayed. To return to pacli press [Enter] $NC"
            read
            ;;
        9)
            echo ""
            echo "Select package to uninstall. All Dependencies will be kept as orphans."
            echo ""
            sudo pacman -R $(pacman -Qq | pmenu -p 'select package to uninstall >')
            echo ""
            echo -e "$NC Action completed. To return to pacli press [Enter] $NC"
            read
            ;;
        10)
	    echo ""
            echo "Select package to uninstall. All of its dependencies shall be removed."
            echo ""
            sudo pacman -Rsn $(pacman -Qq | pmenu -p 'select package to uninstall >')
            echo ""
            echo -e "$NC Action completed. To return to pacli press [Enter] $NC"
            read
            ;;
        11)
            echo ""
            echo "Display all orphan packages"
            pacman -Qqdt
            echo ""
            echo -e "$NC Checking completed. To return to pacli press [Enter] $NC"
            read        
            ;;
        12)
            echo ""
            echo "Uninstalling orphan packages with their depencies."
            echo ""
            sudo pacman -Rns $(pacman -Qqdt)
            echo ""
            echo -e "$NC Task completed. To return to pacli press [Enter] $NC"
            read
            ;;
        13)
            echo ""
            echo "Select package to list all local files of."
            echo ""
            pacman -Ql $(pacman -Qq | pmenu -p 'select a package >')
            echo ""
            echo -e "$NC Task completed. To return to pacli press [Enter] $NC"
            read 
            ;;
        14)
            echo ""
            echo "Select a package whose dependency tree is to be displayed."
            echo ""
            pactree $(pacman -Qq | pmenu -p 'select a package >')
            echo ""
            echo -e "$NC Task completed. To return to pacli press [Enter] $NC"
            read
            ;;
        15)
            echo ""
            pacman -Qet
            echo ""
            echo -e "$NC Task completed. To return to pacli press [Enter] $NC"
            read     
            ;;
            
        16)
            echo ""
            sudo rm -f /var/lib/pacman/db.lck && sudo pacman-mirrors -g && sudo pacman -Syy
            echo ""
            echo -e "$NC All Pacman errors fixed. Now press [Enter] $NC"
            read     
            ;;
        17)
            echo ""
            echo ""
            downgrade $(pacman -Qq | pmenu -p 'select package to downgrade >')
            echo -e "$NC Task completed. To return to pacli press [Enter] $NC"
            read     
            ;;
        18)
            echo ""
            echo ""
            help_text
            echo ""
            echo -e "$NC To return to pacli press [Enter] $NC"
            read
            ;;
        19)
            echo ""
            echo ""
            yaourt -Syyuua
            echo ""
            echo -e "$NC There is nothing else to do. To return to pacli press [Enter] $NC"
            read     
            ;;
        20)
            echo ""
            echo "Enter name of package to be searched and installed from AUR and press [Enter] to continue"
            echo ""
            read Packcage
            yaourt $Packcage
            echo ""
            echo -e "$NC Task completed. To return to pacli press [Enter] $NC"
            read 
            ;;
        21)
            echo ""
            echo "Enter name of package to be installed from AUR and press [Enter] to continue"
            echo ""
            read Packcage
            yaourt -S $Packcage
            echo ""
            echo -e "$NC Task completed. To return to pacli press [Enter] $NC"
            read 
            ;;
        22)
            echo ""
            pacman -Qem
            echo ""
            echo -e "$NC Task completed. To return to pacli press [Enter] $NC"
            read     
            ;;     
        0)
            clear && exit
            read
            ;;
        *)
            echo -e "$RED Wrong option $NC"
            echo "Wait and try again later..."
            echo ""
            sleep 3
            clear
            ;;
    esac
    done
fi
